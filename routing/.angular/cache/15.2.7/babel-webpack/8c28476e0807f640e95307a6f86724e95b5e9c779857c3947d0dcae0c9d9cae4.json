{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ReactiveFormComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter a valid name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ReactiveFormComponent_div_6_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, ReactiveFormComponent_div_6_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"name\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"name\"].errors[\"minlength\"]);\n  }\n}\nfunction ReactiveFormComponent_div_11_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_11_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ReactiveFormComponent_div_11_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, ReactiveFormComponent_div_11_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction ReactiveFormComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ReactiveFormComponent_div_16_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"username\"].errors[\"required\"]);\n  }\n}\nfunction ReactiveFormComponent_div_21_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_21_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password length must be atleast 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_21_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password length must be atmost 20 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ReactiveFormComponent_div_21_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, ReactiveFormComponent_div_21_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(3, ReactiveFormComponent_div_21_div_3_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"password\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"password\"].errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f[\"password\"].errors[\"maxlength\"]);\n  }\n}\nfunction ReactiveFormComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_26_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password does not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReactiveFormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, ReactiveFormComponent_div_26_div_1_Template, 2, 0, \"div\", 10);\n    i0.ɵɵtemplate(2, ReactiveFormComponent_div_26_div_2_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"confirmPassword\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f[\"confirmPassword\"].errors[\"matching\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class ReactiveFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.submitted = false;\n    this.form = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]],\n      username: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(15)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20)]],\n      confirmPassword: ['', [Validators.required]]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.form.valid) {\n      return;\n    }\n    console.log(JSON.stringify(this.form.value, null, 2));\n  }\n  onReset() {\n    this.submitted = false;\n    this.form.reset();\n  }\n}\nReactiveFormComponent.ɵfac = function ReactiveFormComponent_Factory(t) {\n  return new (t || ReactiveFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nReactiveFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReactiveFormComponent,\n  selectors: [[\"app-reactive-form\"]],\n  decls: 32,\n  vars: 21,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\", \"minlength\", \"3\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"password\", \"required\", \"\", \"minlength\", \"8\", \"maxlength\", \"20\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"confirmPassword\", \"required\", \"\", 3, \"ngClass\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n  template: function ReactiveFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ReactiveFormComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n      i0.ɵɵtext(4, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 1);\n      i0.ɵɵtemplate(6, ReactiveFormComponent_div_6_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\");\n      i0.ɵɵtext(9, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 3);\n      i0.ɵɵtemplate(11, ReactiveFormComponent_div_11_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\");\n      i0.ɵɵtext(14, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 4);\n      i0.ɵɵtemplate(16, ReactiveFormComponent_div_16_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\")(18, \"label\");\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 5);\n      i0.ɵɵtemplate(21, ReactiveFormComponent_div_21_Template, 4, 3, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\")(23, \"label\");\n      i0.ɵɵtext(24, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 6);\n      i0.ɵɵtemplate(26, ReactiveFormComponent_div_26_Template, 3, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\")(28, \"button\", 7);\n      i0.ɵɵtext(29, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ReactiveFormComponent_Template_button_click_30_listener() {\n        return ctx.onReset();\n      });\n      i0.ɵɵtext(31, \"Reset\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f[\"name\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"name\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f[\"username\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"username\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.submitted && ctx.f[\"confirmPassword\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"confirmPassword\"].errors);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".invalid-feedback[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW1wbG95ZWUvZW1wbG95ZWUvZW1wbG95ZWUtbGlzdC9yZWFjdGl2ZS1mb3JtL3JlYWN0aXZlLWZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZhbGlkLWZlZWRiYWNre1xyXG4gICAgY29sb3I6IHJlZDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ReactiveFormComponent","constructor","formBuilder","form","group","name","required","minLength","email","username","maxLength","password","confirmPassword","f","controls","onSubmit","submitted","valid","console","log","JSON","stringify","value","onReset","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\raj.lad\\Desktop\\1Rivet\\Tasks\\angular\\routing\\src\\app\\employee\\employee\\employee-list\\reactive-form\\reactive-form.component.ts","C:\\Users\\raj.lad\\Desktop\\1Rivet\\Tasks\\angular\\routing\\src\\app\\employee\\employee\\employee-list\\reactive-form\\reactive-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators , ValidationErrors, AbstractControl} from '@angular/forms';\nimport { Validation } from '../validators/validation';\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.css']\n})\nexport class ReactiveFormComponent {\n\n  form: FormGroup;\n  submitted = false;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(3),\n          ],\n        ],\n\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n          ],\n        ],\n\n        username: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(15),\n          ],\n        ],\n\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(20),\n          ],\n        ],\n\n        confirmPassword: [\n          '',\n          [\n            Validators.required,\n          ],\n        ],\n      },\n      // {\n      //   validators: [Validation.match('password', 'confirmPassword')]\n      // }\n    )\n  }\n\n  get f(): { [key : string]: AbstractControl}\n  {\n    return this.form.controls;\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if(this.form.valid)\n    {\n      return;\n    }\n\n    console.log(JSON.stringify(this.form.value, null , 2));\n  }\n\n  onReset(): void {\n    this.submitted = false;\n    this.form.reset();\n  }\n}\n","<div>\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n        <div>\n            <label>Name</label>\n            <input type=\"text\" formControlName=\"name\" required minlength=\"3\"\n                [ngClass]=\"{'is-invalid' : submitted && f['name'].errors}\">\n            <div *ngIf=\"submitted && f['name'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['name'].errors['required']\">Name is Required</div>\n                <div *ngIf=\"f['name'].errors['minlength']\">Please enter a valid name</div>\n            </div>\n        </div>\n\n        <div>\n            <label>Email</label>\n            <input type=\"email\" formControlName=\"email\" required\n                [ngClass]=\"{'is-invalid' : submitted && f['email'].errors}\">\n            <div *ngIf=\"submitted && f['email'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['email'].errors['required']\">Email is Required</div>\n                <div *ngIf=\"f['email'].errors['email']\">Email is invalid</div>\n            </div>\n        </div>\n\n        <div>\n            <label>Username</label>\n            <input type=\"text\" formControlName=\"username\" required\n                [ngClass]=\"{'is-invalid' : submitted && f['username'].errors}\">\n            <div *ngIf=\"submitted && f['username'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['username'].errors['required']\">Username is Required</div>\n            </div>\n        </div>\n\n        <div>\n            <label>Password</label>\n            <input type=\"text\" formControlName=\"password\" required minlength=\"8\" maxlength=\"20\"\n                [ngClass]=\"{'is-invalid' : submitted && f['password'].errors}\">\n            <div *ngIf=\"submitted && f['password'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['password'].errors['required']\">Password is Required</div>\n                <div *ngIf=\"f['password'].errors['minlength']\">Password length must be atleast 8 characters</div>\n                <div *ngIf=\"f['password'].errors['maxlength']\">Password length must be atmost 20 characters</div>\n            </div>\n        </div>\n\n        <div>\n            <label>Confirm Password</label>\n            <input type=\"text\" formControlName=\"confirmPassword\" required\n                [ngClass]=\"{'is-invalid' : submitted && f['confirmPassword'].errors}\">\n            <div *ngIf=\"submitted && f['confirmPassword'].errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f['confirmPassword'].errors['required']\">Confirm Password is Required</div>\n                <div *ngIf=\"f['confirmPassword'].errors['matching']\">Confirm Password does not match</div>\n            </div>\n        </div>\n\n\n        <div>\n            <button type=\"submit\">Register</button>\n            <button type=\"button\" (click)=\"onReset()\">Reset</button>\n        </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}